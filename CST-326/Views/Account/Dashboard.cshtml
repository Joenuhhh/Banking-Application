@model CST_326.Models.ViewModel.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";
}
<style>
    .custom-form .form-group {
        display: inline-block;
        margin-right: 20px; /* Increased spacing between selectors */
    }

    /* Adjust the width of the form controls if necessary */
    .custom-form .form-control {
        width: 100%; /* Or adjust as needed */
        margin-right: 200%;
    }

    .custom-form button {
        margin-top: 20px; /* Increased spacing between the form and the button */
    }
</style>

<br />
<br />
<h1>
    Dashboard <span style="display: inline-block; vertical-align: middle; margin-bottom: 15px;">
        <img src="~/Images/DashboardIcon.png" alt="Site Icon" style="height: 60px; width: 60px; margin-right: 10px;">
    </span>
</h1>

<div class="card mb-4" style="border-radius: 15px; box-shadow: 2px 2px 10px rgba(0,0,0,0.4);">
    <div class="card-body">
        <h4 class="card-title">
           Welcome @Model.User.FirstName 
        </h4>

        <!-- Display user information -->
        <dl class="row">
            <dt class="col-sm-4">User ID:</dt>
            <dd class="col-sm-8">@Model.User.UserId</dd>

            <dt class="col-sm-4">First Name:</dt>
            <dd class="col-sm-8">@Model.User.FirstName</dd>

            <dt class="col-sm-4">Last Name:</dt>
            <dd class="col-sm-8">@Model.User.LastName</dd>

            <dt class="col-sm-4">Username:</dt>
            <dd class="col-sm-8">@Model.User.UserName</dd>

            <dt class="col-sm-4">Phone Number:</dt>
            <dd class="col-sm-8">@Model.User.PhoneNumber</dd>

            <dt class="col-sm-4">Email:</dt>
            <dd class="col-sm-8">@Model.User.Email</dd>
        </dl>
  
        <a asp-action="AddAccount" asp-route-userId="@Model.User.UserId" class="btn btn-primary">Add Account</a>
    </div>
</div>


<!-- Card for displaying user's accounts -->
@if (Model.Accounts != null && Model.Accounts.Count > 0)
{
    <div class="card" style="border-radius: 15px; box-shadow: 2px 2px 10px rgba(0,0,0,.4);">
        <div class="card-body">
            <h4 class="card-title">User's Accounts</h4>
            <table class="table" style="border-radius: 15px;">
                <thead>
                    <tr>
                        <th>Account Number</th>
                        <th>Account Type</th>
                        <th>Balance</th>
                        <th>Creation Date</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var account in Model.Accounts)
                    {
                        <tr id="accountRow_@account.AccountId">
                            <td>@account.AccountNumber</td>
                            <td>@account.AccountType</td>
                            <td>@account.Balance</td>
                            <td>@account.CreatedAt.ToString("yyyy-MM-dd")</td>
                            <td>
                                <button class="btn btn-danger" onclick="deleteAccount(@account.AccountId)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>


}
else
{
    <p>No accounts found for the user.</p>
}
<!-- Card for transferring funds -->
<div class="card mb-4" style="border-radius: 15px; box-shadow: 2px 2px 10px rgba(0,0,0,0.4);">
    <div class="card-body">
        <h4 class="card-title">Transfer Funds</h4>
        <hr />
        <!-- Transfer funds form -->
        <form id="transferFundsForm" class="custom-form">
            <div class="form-group">
                <label for="fromAccount">Transfer From:</label>
                <select class="form-control" id="fromAccount">
                    @foreach (var account in Model.Accounts)
                    {
                        <option value="@account.AccountId">@account.AccountType - @account.AccountNumber</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="toAccount">Transfer To:</label>
                <select class="form-control" id="toAccount">
                    @foreach (var account in Model.Accounts)
                    {
                        <option value="@account.AccountId">@account.AccountType - @account.AccountNumber</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="amount">Amount:</label>
                <input type="number" class="form-control" id="amount" placeholder="Enter amount to transfer">
            </div>
            <button type="button" class="btn btn-primary" onclick="transferFunds()" style="margin-top: -5px;">Transfer</button>
        </form>
    </div>
</div>






<script>
    function addAccount() {
        // Redirect to the AddAccount action in the Account controller
        window.location.href = '/Account/AddAccount';
    }

    function deleteAccount(accountId) {
        if (confirm("Are you sure you want to delete this account?")) {
            $.ajax({
                url: '/Account/DeleteAccount',
                method: 'POST',
                data: { accountId: accountId },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        $('#accountRow_' + accountId).remove();
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error deleting account:", error);
                    alert("An error occurred while deleting the account.");
                }
            });
        }
    }
    function transferFunds() {
        var fromAccountId = $("#fromAccount").val();
        var toAccountId = $("#toAccount").val();
        var amount = $("#amount").val();

        $.ajax({
            url: '/Account/TransferFunds',
            method: 'POST',
            data: { fromAccountId: fromAccountId, toAccountId: toAccountId, amount: amount },
            success: function (response) {
                if (response.success) {
                    alert(response.message);
                    // Reload the page upon successful transfer
                    location.reload();
                } else {
                    alert(response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error transferring funds:", error);
                alert("An error occurred while transferring funds.");
            }
        });
    }
</script>
